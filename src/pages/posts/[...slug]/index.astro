---
import { type CollectionEntry, getCollection, render } from "astro:content";

import Layout from "@/layouts/Layout.astro";
import FormattedDate from "@/components/FormattedDate.astro";
import Prose from "@/components/Prose.astro";

export async function getStaticPaths() {
  const posts = await getCollection("blog");
  return posts.map((post) => ({
    params: { slug: post.id },
    props: post,
  }));
}

type Props = CollectionEntry<"blog">;

const post = Astro.props;
const { Content } = await render(post);
---

<Layout
  title={post.data.title}
  description={post.data.description}
  openGraph={{
    basic: {
      title: post.data.title,
      type: "website",
      image: `${Astro.site}posts/${post.id}/og.png`,
    },
    optional: {
      description: post.data.description,
    },
  }}
>
  <Fragment slot="content">
    <div class="flex flex-col space-y-2 mb-4">
      <h1 class="text-2xl font-medium">{post.data.title}</h1>
      {post.data.description && (
        <p class="hidden">{post.data.description}</p>
      )}
      <FormattedDate date={post.data.pubDate} />
    </div>
    <Prose>
      <Content />
    </Prose>
    <ul class="flex flex-col space-x-0 space-y-1 md:flex-row md:space-x-2 md:space-y-0 md:flex-wrap">
      {
        post.data.tags?.map((tag) => (
          <li>
            <a class="text-blue-500 hover:underline" href={`/tags/${tag}/`}>
              #{tag}
            </a>
          </li>
        ))
      }
    </ul>
  </Fragment>
</Layout>
