---
import { getCollection, getEntry, render } from 'astro:content';

import Layout from "../layouts/Layout.astro";
import Prose from '../components/Prose.astro';
import FormattedDate from '@/components/FormattedDate.astro';
import { SITE_DESCRIPTION, SITE_TITLE } from '@/consts';

const entry = await getEntry("info", "intro");
const { Content } = await render(entry!);

const posts = (await getCollection("blog")).sort(
  (b, a) => a.data.pubDate.valueOf() - b.data.pubDate.valueOf()
);

const uniqueTags = [
  ...new Set(
    posts.flatMap((post) => post.data.tags).filter((tag) => tag !== undefined)
  ),
].sort();
---

<Layout
  openGraph={{
    basic: {
      title: SITE_TITLE,
      type: "website",
      image: `${Astro.site}og.png`,
    },
    optional: {
      description: SITE_DESCRIPTION,
    },
  }}
>
  <Fragment slot="content">
    <Prose>
      <Content />
    </Prose>
    <div class="flex flex-col space-y-2">
      <h1 class="text-2xl font-medium">Blog Posts</h1>
      <ul class="flex flex-col space-y-4 md:space-y-0">
        {
          posts.map((post) => (
            <li class="flex flex-col space-x-0 md:flex-row md:space-x-2 md:items-baseline">
              <FormattedDate date={post.data.pubDate} />
              <a href={`/posts/${post.id}/`} class="text-blue-500 md:text-lg hover:underline">{post.data.title}</a>
            </li>
          ))
        }
      </ul>
    </div>
    <div class="flex flex-col space-y-2">
      <h2 class="text-xl font-medium tracking-tight">Tags</h2>
      <ul class="flex flex-col space-x-0 space-y-1 md:flex-row md:space-x-2 md:space-y-0 md:flex-wrap">
        {
          uniqueTags.map((tag) => (
            <li>
              <a class="text-blue-500 hover:underline" href={`/tags/${tag}/`}>
                #{tag}
              </a>
            </li>
          ))
        }
      </ul>
    </div>
  </Fragment>
</Layout>